```python
# The task is "Drop the box cutter into the blue box."
# From the image, keypoints 3, 4, and 5 are on the box cutter, and keypoints 0, 1, and 2 are on the blue box.
# This task involves 2 stages:
# 1. Grasp the box cutter.
# 2. Drop the box cutter into the blue box.

num_stages = 2

### stage 1 sub-goal constraints (grasp the box cutter)
def stage1_subgoal_constraint1(end_effector, keypoints):
    """Align the end-effector with the handle of the box cutter (keypoint 4)."""
    target_point = keypoints[4]
    cost = np.linalg.norm(end_effector - target_point)
    return cost

### stage 1 path constraints
# No path constraints for grasping stage

### stage 2 sub-goal constraints (drop the box cutter into the blue box)
def stage2_subgoal_constraint1(end_effector, keypoints):
    """The center of the box cutter (mean of keypoints 3, 4, 5) should be 10cm above the center of the blue box (mean of keypoints 0, 1, 2)."""
    box_center = (keypoints[0] + keypoints[1] + keypoints[2]) / 3
    cutter_center = (keypoints[3] + keypoints[4] + keypoints[5]) / 3
    offsetted_point = box_center + np.array([0, 0, 0.10])
    cost = np.linalg.norm(cutter_center - offsetted_point)
    return cost

### stage 2 path constraints
def stage2_path_constraint1(end_effector, keypoints):
    """The robot must still be grasping the box cutter handle (keypoint 4)."""
    return get_grasping_cost_by_keypoint_idx(4)

grasp_keypoints = [4, -1]
release_keypoints = [-1, 4]
```