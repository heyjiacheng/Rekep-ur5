```python
# The task is "Drop the game controller into the blue box."
# From the image, keypoints 2 and 3 are on the game controller.
# Keypoints 4, 5, and 6 are on the blue box.
# The task involves 2 stages:
# 1. Grasp the game controller.
# 2. Drop the game controller into the blue box.

num_stages = 2

### stage 1 sub-goal constraints (grasp the game controller)
def stage1_subgoal_constraint1(end_effector, keypoints):
    """Align the end-effector with the center of the game controller (keypoint 2)."""
    controller_kp = keypoints[2]
    cost = np.linalg.norm(end_effector - controller_kp)
    return cost

### stage 1 path constraints
# No path constraints for grasping stage

### stage 2 sub-goal constraints (drop the controller into the blue box)
def stage2_subgoal_constraint1(end_effector, keypoints):
    """The game controller (keypoint 2) is 5cm above the center of the blue box (average of keypoints 4, 5, 6)."""
    box_center = (keypoints[4] + keypoints[5] + keypoints[6]) / 3
    offsetted_point = box_center + np.array([0, 0, 0.05])  # 5cm above
    controller_kp = keypoints[2]
    cost = np.linalg.norm(controller_kp - offsetted_point)
    return cost

### stage 2 path constraints
def stage2_path_constraint1(end_effector, keypoints):
    """The robot must still be grasping the game controller (keypoint 2)."""
    return get_grasping_cost_by_keypoint_idx(2)

grasp_keypoints = [2, -1]
release_keypoints = [-1, 2]
```